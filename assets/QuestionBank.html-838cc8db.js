import{_ as n,p as s,q as a,a1 as t}from"./framework-efe98465.js";const p={},e=t(`<blockquote><p>扩展抽象了题库,方便切换或者增加题库使用,题库后端和数据请自行整理</p><p>源码请看<code>internal/app/question.ts</code>和<code>internal/app/topic.ts</code></p></blockquote><blockquote><p>ps:这个模块其实挺乱的...想优化</p></blockquote><h2 id="题库接口" tabindex="-1"><a class="header-anchor" href="#题库接口" aria-hidden="true">#</a> 题库接口</h2><p>题库的接口</p><div class="language-typescript line-numbers-mode" data-ext="ts"><pre class="language-typescript"><code><span class="token comment">// 题库操作实现</span>
<span class="token keyword">export</span> <span class="token keyword">interface</span> <span class="token class-name">QuestionBankFacade</span> <span class="token punctuation">{</span>
    <span class="token function">ClearQuestion</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">:</span> <span class="token keyword">void</span>

    <span class="token function">AddQuestion</span><span class="token punctuation">(</span>q<span class="token operator">:</span> Question<span class="token punctuation">)</span><span class="token operator">:</span> <span class="token keyword">void</span>

    <span class="token function">Answer</span><span class="token punctuation">(</span><span class="token function-variable function">callback</span><span class="token operator">:</span> <span class="token punctuation">(</span>status<span class="token operator">:</span> QuestionStatus<span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token keyword">void</span><span class="token punctuation">)</span><span class="token operator">:</span> <span class="token keyword">void</span>

    <span class="token function">Push</span><span class="token punctuation">(</span><span class="token function-variable function">callback</span><span class="token operator">:</span> <span class="token punctuation">(</span>status<span class="token operator">:</span> QuestionStatus<span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token keyword">void</span><span class="token punctuation">)</span><span class="token operator">:</span> <span class="token keyword">void</span>

    <span class="token function">CheckCourse</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">:</span> <span class="token builtin">Promise</span><span class="token operator">&lt;</span><span class="token builtin">number</span><span class="token operator">&gt;</span>
<span class="token punctuation">}</span>
<span class="token comment">// 题库存储实现</span>
<span class="token keyword">export</span> <span class="token keyword">interface</span> <span class="token class-name">QuestionBank</span> <span class="token punctuation">{</span>
    <span class="token function">Answer</span><span class="token punctuation">(</span>topic<span class="token operator">:</span> Topic<span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">,</span> resolve<span class="token operator">:</span> QuestionBankCallback<span class="token punctuation">)</span><span class="token operator">:</span> <span class="token keyword">void</span><span class="token punctuation">;</span>

    <span class="token function">Push</span><span class="token punctuation">(</span>answer<span class="token operator">:</span> Answer<span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token operator">:</span> <span class="token builtin">Promise</span><span class="token operator">&lt;</span>QuestionStatus<span class="token operator">&gt;</span><span class="token punctuation">;</span>

    <span class="token function">SetInfo</span><span class="token punctuation">(</span>info<span class="token operator">:</span> QuestionInfo<span class="token punctuation">)</span><span class="token operator">:</span> <span class="token keyword">void</span><span class="token punctuation">;</span>

    CheckCourse<span class="token operator">?</span><span class="token punctuation">(</span>info<span class="token operator">?</span><span class="token operator">:</span> QuestionInfo<span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token operator">:</span> <span class="token builtin">Promise</span><span class="token operator">&lt;</span><span class="token builtin">number</span><span class="token operator">&gt;</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="实现" tabindex="-1"><a class="header-anchor" href="#实现" aria-hidden="true">#</a> 实现</h4><p>ToolsQuestionBankFacade 扩展自带题库</p><h4 id="使用" tabindex="-1"><a class="header-anchor" href="#使用" aria-hidden="true">#</a> 使用</h4><div class="language-typescript line-numbers-mode" data-ext="ts"><pre class="language-typescript"><code><span class="token keyword">let</span> topic <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">ExamTopic</span><span class="token punctuation">(</span>context<span class="token punctuation">,</span> <span class="token keyword">new</span> <span class="token class-name">ToolsQuestionBankFacade</span><span class="token punctuation">(</span><span class="token string">&quot;cx&quot;</span><span class="token punctuation">,</span> taskinfo<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h2 id="答题接口" tabindex="-1"><a class="header-anchor" href="#答题接口" aria-hidden="true">#</a> 答题接口</h2><p>如果是利用现在的题库,开发者只需要专注实现下列接口,具体可参考现有平台</p><div class="language-typescript line-numbers-mode" data-ext="ts"><pre class="language-typescript"><code><span class="token comment">// 选项</span>
<span class="token keyword">export</span> <span class="token keyword">interface</span> <span class="token class-name">Options</span> <span class="token punctuation">{</span>
    <span class="token function">Random</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">:</span> TopicStatus<span class="token punctuation">;</span>
    <span class="token function">Fill</span><span class="token punctuation">(</span>s<span class="token operator">:</span> Answer<span class="token punctuation">)</span><span class="token operator">:</span> <span class="token builtin">Promise</span><span class="token operator">&lt;</span>TopicStatus<span class="token operator">&gt;</span><span class="token punctuation">;</span>
    <span class="token function">Correct</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">:</span> Answer
<span class="token punctuation">}</span>
<span class="token comment">// 题目,继承了选项接口</span>
<span class="token keyword">export</span> <span class="token keyword">interface</span> <span class="token class-name">Question</span> <span class="token keyword">extends</span> <span class="token class-name">Options</span> <span class="token punctuation">{</span>
    <span class="token function">GetType</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">:</span> TopicType<span class="token punctuation">;</span>
    <span class="token function">GetTopic</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">;</span>
    <span class="token function">SetStatus</span><span class="token punctuation">(</span>status<span class="token operator">:</span> TopicStatus<span class="token punctuation">)</span><span class="token operator">:</span> <span class="token keyword">void</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
<span class="token comment">// 查询任务中的题目,返回Question数组</span>
<span class="token keyword">export</span> <span class="token keyword">interface</span> <span class="token class-name">QueryQuestions</span> <span class="token punctuation">{</span>
    <span class="token function">QueryQuestions</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">:</span> Question<span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
<span class="token comment">// 题目任务点</span>
<span class="token keyword">export</span> <span class="token keyword">abstract</span> <span class="token keyword">class</span> <span class="token class-name">Topic</span> <span class="token punctuation">{</span>
    <span class="token keyword">public</span> <span class="token keyword">abstract</span> <span class="token function">Init</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">:</span> <span class="token builtin">Promise</span><span class="token operator">&lt;</span><span class="token builtin">any</span><span class="token operator">&gt;</span><span class="token punctuation">;</span>
    <span class="token keyword">public</span> <span class="token keyword">abstract</span> <span class="token function">Submit</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">:</span> <span class="token builtin">Promise</span><span class="token operator">&lt;</span><span class="token builtin">any</span><span class="token operator">&gt;</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="使用-1" tabindex="-1"><a class="header-anchor" href="#使用-1" aria-hidden="true">#</a> 使用</h4><div class="language-typescript line-numbers-mode" data-ext="ts"><pre class="language-typescript"><code><span class="token keyword">let</span> topic <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">ExamTopic</span><span class="token punctuation">(</span>context<span class="token punctuation">,</span> <span class="token keyword">new</span> <span class="token class-name">ToolsQuestionBankFacade</span><span class="token punctuation">(</span><span class="token string">&quot;cx&quot;</span><span class="token punctuation">,</span> taskinfo<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div>`,14),o=[e];function c(i,l){return s(),a("div",null,o)}const r=n(p,[["render",c],["__file","QuestionBank.html.vue"]]);export{r as default};
