import{_ as n,c as a,a as p,o as e}from"./app-wFSEqLp_.js";const t={};function o(c,s){return e(),a("div",null,s[0]||(s[0]=[p(`<blockquote><p>扩展抽象了题库,方便切换或者增加题库使用,题库后端和数据请自行整理</p><p>源码请看<code>internal/app/question.ts</code>和<code>internal/app/topic.ts</code></p></blockquote><blockquote><p>ps:这个模块其实挺乱的...想优化</p></blockquote><h2 id="题库接口" tabindex="-1"><a class="header-anchor" href="#题库接口"><span>题库接口</span></a></h2><p>题库的接口</p><div class="language-typescript line-numbers-mode" data-highlighter="prismjs" data-ext="ts"><pre><code><span class="line"><span class="token comment">// 题库操作实现</span></span>
<span class="line"><span class="token keyword">export</span> <span class="token keyword">interface</span> <span class="token class-name">QuestionBankFacade</span> <span class="token punctuation">{</span></span>
<span class="line">    <span class="token function">ClearQuestion</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">:</span> <span class="token keyword">void</span></span>
<span class="line"></span>
<span class="line">    <span class="token function">AddQuestion</span><span class="token punctuation">(</span>q<span class="token operator">:</span> Question<span class="token punctuation">)</span><span class="token operator">:</span> <span class="token keyword">void</span></span>
<span class="line"></span>
<span class="line">    <span class="token function">Answer</span><span class="token punctuation">(</span><span class="token function-variable function">callback</span><span class="token operator">:</span> <span class="token punctuation">(</span>status<span class="token operator">:</span> QuestionStatus<span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token keyword">void</span><span class="token punctuation">)</span><span class="token operator">:</span> <span class="token keyword">void</span></span>
<span class="line"></span>
<span class="line">    <span class="token function">Push</span><span class="token punctuation">(</span><span class="token function-variable function">callback</span><span class="token operator">:</span> <span class="token punctuation">(</span>status<span class="token operator">:</span> QuestionStatus<span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token keyword">void</span><span class="token punctuation">)</span><span class="token operator">:</span> <span class="token keyword">void</span></span>
<span class="line"></span>
<span class="line">    <span class="token function">CheckCourse</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">:</span> <span class="token builtin">Promise</span><span class="token operator">&lt;</span><span class="token builtin">number</span><span class="token operator">&gt;</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"><span class="token comment">// 题库存储实现</span></span>
<span class="line"><span class="token keyword">export</span> <span class="token keyword">interface</span> <span class="token class-name">QuestionBank</span> <span class="token punctuation">{</span></span>
<span class="line">    <span class="token function">Answer</span><span class="token punctuation">(</span>topic<span class="token operator">:</span> Topic<span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">,</span> resolve<span class="token operator">:</span> QuestionBankCallback<span class="token punctuation">)</span><span class="token operator">:</span> <span class="token keyword">void</span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line">    <span class="token function">Push</span><span class="token punctuation">(</span>answer<span class="token operator">:</span> Answer<span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token operator">:</span> <span class="token builtin">Promise</span><span class="token operator">&lt;</span>QuestionStatus<span class="token operator">&gt;</span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line">    <span class="token function">SetInfo</span><span class="token punctuation">(</span>info<span class="token operator">:</span> QuestionInfo<span class="token punctuation">)</span><span class="token operator">:</span> <span class="token keyword">void</span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line">    CheckCourse<span class="token operator">?</span><span class="token punctuation">(</span>info<span class="token operator">?</span><span class="token operator">:</span> QuestionInfo<span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token operator">:</span> <span class="token builtin">Promise</span><span class="token operator">&lt;</span><span class="token builtin">number</span><span class="token operator">&gt;</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="实现" tabindex="-1"><a class="header-anchor" href="#实现"><span>实现</span></a></h4><p>ToolsQuestionBankFacade 扩展自带题库</p><h4 id="使用" tabindex="-1"><a class="header-anchor" href="#使用"><span>使用</span></a></h4><div class="language-typescript line-numbers-mode" data-highlighter="prismjs" data-ext="ts"><pre><code><span class="line"><span class="token keyword">let</span> topic <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">ExamTopic</span><span class="token punctuation">(</span>context<span class="token punctuation">,</span> <span class="token keyword">new</span> <span class="token class-name">ToolsQuestionBankFacade</span><span class="token punctuation">(</span><span class="token string">&quot;cx&quot;</span><span class="token punctuation">,</span> taskinfo<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><h2 id="答题接口" tabindex="-1"><a class="header-anchor" href="#答题接口"><span>答题接口</span></a></h2><p>如果是利用现在的题库,开发者只需要专注实现下列接口,具体可参考现有平台</p><div class="language-typescript line-numbers-mode" data-highlighter="prismjs" data-ext="ts"><pre><code><span class="line"><span class="token comment">// 选项</span></span>
<span class="line"><span class="token keyword">export</span> <span class="token keyword">interface</span> <span class="token class-name">Options</span> <span class="token punctuation">{</span></span>
<span class="line">    <span class="token function">Random</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">:</span> TopicStatus<span class="token punctuation">;</span></span>
<span class="line">    <span class="token function">Fill</span><span class="token punctuation">(</span>s<span class="token operator">:</span> Answer<span class="token punctuation">)</span><span class="token operator">:</span> <span class="token builtin">Promise</span><span class="token operator">&lt;</span>TopicStatus<span class="token operator">&gt;</span><span class="token punctuation">;</span></span>
<span class="line">    <span class="token function">Correct</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">:</span> Answer</span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"><span class="token comment">// 题目,继承了选项接口</span></span>
<span class="line"><span class="token keyword">export</span> <span class="token keyword">interface</span> <span class="token class-name">Question</span> <span class="token keyword">extends</span> <span class="token class-name">Options</span> <span class="token punctuation">{</span></span>
<span class="line">    <span class="token function">GetType</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">:</span> TopicType<span class="token punctuation">;</span></span>
<span class="line">    <span class="token function">GetTopic</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">;</span></span>
<span class="line">    <span class="token function">SetStatus</span><span class="token punctuation">(</span>status<span class="token operator">:</span> TopicStatus<span class="token punctuation">)</span><span class="token operator">:</span> <span class="token keyword">void</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"><span class="token comment">// 查询任务中的题目,返回Question数组</span></span>
<span class="line"><span class="token keyword">export</span> <span class="token keyword">interface</span> <span class="token class-name">QueryQuestions</span> <span class="token punctuation">{</span></span>
<span class="line">    <span class="token function">QueryQuestions</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">:</span> Question<span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"><span class="token comment">// 题目任务点</span></span>
<span class="line"><span class="token keyword">export</span> <span class="token keyword">abstract</span> <span class="token keyword">class</span> <span class="token class-name">Topic</span> <span class="token punctuation">{</span></span>
<span class="line">    <span class="token keyword">public</span> <span class="token keyword">abstract</span> <span class="token function">Init</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">:</span> <span class="token builtin">Promise</span><span class="token operator">&lt;</span><span class="token builtin">any</span><span class="token operator">&gt;</span><span class="token punctuation">;</span></span>
<span class="line">    <span class="token keyword">public</span> <span class="token keyword">abstract</span> <span class="token function">Submit</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">:</span> <span class="token builtin">Promise</span><span class="token operator">&lt;</span><span class="token builtin">any</span><span class="token operator">&gt;</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="使用-1" tabindex="-1"><a class="header-anchor" href="#使用-1"><span>使用</span></a></h4><div class="language-typescript line-numbers-mode" data-highlighter="prismjs" data-ext="ts"><pre><code><span class="line"><span class="token keyword">let</span> topic <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">ExamTopic</span><span class="token punctuation">(</span>context<span class="token punctuation">,</span> <span class="token keyword">new</span> <span class="token class-name">ToolsQuestionBankFacade</span><span class="token punctuation">(</span><span class="token string">&quot;cx&quot;</span><span class="token punctuation">,</span> taskinfo<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div></div></div>`,14)]))}const i=n(t,[["render",o]]),u=JSON.parse('{"path":"/Develop/QuestionBank.html","title":"题库和答题功能","lang":"zh-CN","frontmatter":{"title":"题库和答题功能"},"git":{"updatedTime":1604216602000,"contributors":[{"name":"CodFrm","username":"CodFrm","email":"code.farmer@qq.com","commits":2,"url":"https://github.com/CodFrm"}],"changelog":[{"hash":"1de3c98825266de63a837a863d14a007e548e9d1","time":1604216602000,"email":"love@xloli.top","author":"CodFrm","message":"修改文档"},{"hash":"46842cb7c2601054ca5527e89dbe62622dd6de12","time":1603806167000,"email":"code.farmer@qq.com","author":"CodFrm","message":"开发文档"}]},"filePathRelative":"Develop/QuestionBank.md"}');export{i as comp,u as data};
