import{_ as n,p as s,q as a,a1 as e}from"./framework-efe98465.js";const o={},t=e(`<blockquote><p>为了方便开发,抽象了平台的流程,只需要专注于功能的实现</p></blockquote><h2 id="开始" tabindex="-1"><a class="header-anchor" href="#开始" aria-hidden="true">#</a> 开始</h2><p>创建新的平台应该遵循现有规则,在<code>mooc</code>文件夹下创建以平台为命名规则的文件夹</p><p>且有文件<code>mooc/[platform]/platform.ts</code>,实现<code>MoocFactory</code>接口的类,用于通过页面信息来创建对应的具体<code>Mooc</code>对象,如果不符合规则返回<code>null</code>,对应<code>构建实例(mooc/[platform]/platform.ts)</code>生命周期</p><p>需要在<code>/build/cxmooc-tools/manifest.json</code>文件和<code>/src/config.ts</code>中添加对应的URL规则</p><p>如果你需要开发油猴脚本,那么你需要在<code>/src/tampermonkey</code>目录中添加对应的油猴文件,且在<code>webpack.tampermonkey.js</code>和<code>internal/pack-crx.ts:43</code>中添加对应配置,具体请参考现有平台</p><h2 id="实现mooc接口" tabindex="-1"><a class="header-anchor" href="#实现mooc接口" aria-hidden="true">#</a> 实现Mooc接口</h2><p>具体请看已有平台</p><h4 id="接口定义" tabindex="-1"><a class="header-anchor" href="#接口定义" aria-hidden="true">#</a> 接口定义</h4><div class="language-typescript line-numbers-mode" data-ext="ts"><pre class="language-typescript"><code><span class="token comment">// 事件</span>
<span class="token keyword">export</span> <span class="token keyword">type</span> <span class="token class-name">MoocEvent</span> <span class="token operator">=</span> <span class="token string">&quot;complete&quot;</span> <span class="token operator">|</span> <span class="token string">&quot;reload&quot;</span> <span class="token operator">|</span> <span class="token string">&quot;error&quot;</span> <span class="token operator">|</span> <span class="token string">&quot;taskComplete&quot;</span><span class="token punctuation">;</span>

<span class="token comment">// 单个Mooc任务,可能会被抛弃</span>
<span class="token keyword">export</span> <span class="token keyword">interface</span> <span class="token class-name">Mooc</span> <span class="token punctuation">{</span>
    <span class="token function">Init</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">:</span> <span class="token builtin">any</span>
<span class="token punctuation">}</span>

<span class="token comment">// Mooc任务集,未来更倾向于使用此接口</span>
<span class="token keyword">export</span> <span class="token keyword">interface</span> <span class="token class-name">MoocTaskSet</span> <span class="token keyword">extends</span> <span class="token class-name">Mooc</span><span class="token punctuation">,</span> IEventListener<span class="token operator">&lt;</span>MoocEvent<span class="token operator">&gt;</span> <span class="token punctuation">{</span>
    <span class="token comment">// 初始化</span>
    <span class="token function">Init</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">:</span> <span class="token builtin">Promise</span><span class="token operator">&lt;</span><span class="token builtin">any</span><span class="token operator">&gt;</span>

    <span class="token comment">// 停止</span>
    <span class="token function">Stop</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">:</span> <span class="token builtin">Promise</span><span class="token operator">&lt;</span><span class="token builtin">any</span><span class="token operator">&gt;</span>

    <span class="token comment">// 返回下一个任务点</span>
    <span class="token function">Next</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">:</span> <span class="token builtin">Promise</span><span class="token operator">&lt;</span>Task<span class="token operator">&gt;</span>

    <span class="token comment">// 设置任务点位置</span>
    <span class="token function">SetTaskPointer</span><span class="token punctuation">(</span>index<span class="token operator">:</span> <span class="token builtin">number</span><span class="token punctuation">)</span><span class="token operator">:</span> <span class="token keyword">void</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,10),p=[t];function c(l,i){return s(),a("div",null,p)}const d=n(o,[["render",c],["__file","Platform.html.vue"]]);export{d as default};
