import{_ as s,c as a,a as p,o as e}from"./app-wFSEqLp_.js";const t={};function o(l,n){return e(),a("div",null,n[0]||(n[0]=[p(`<blockquote><p>为了方便开发,提供了很多内置组件来进行调用,每一个组件都提供了接口可以定制化</p><p>存放文件夹为<code>internal/utils</code></p></blockquote><p>在应用启动(mooc.ts)周期注入组件实例</p><div class="language-typescript line-numbers-mode" data-highlighter="prismjs" data-ext="ts"><pre><code><span class="line"><span class="token keyword">let</span> component <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Map<span class="token operator">&lt;</span><span class="token builtin">string</span><span class="token punctuation">,</span> <span class="token builtin">any</span><span class="token operator">&gt;</span></span><span class="token punctuation">(</span><span class="token punctuation">)</span></span>
<span class="line">    <span class="token punctuation">.</span><span class="token function">set</span><span class="token punctuation">(</span><span class="token string">&quot;config&quot;</span><span class="token punctuation">,</span> <span class="token keyword">new</span> <span class="token class-name">ChromeConfigItems</span><span class="token punctuation">(</span><span class="token function">NewFrontendGetConfig</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span></span>
<span class="line">    <span class="token punctuation">.</span><span class="token function">set</span><span class="token punctuation">(</span><span class="token string">&quot;logger&quot;</span><span class="token punctuation">,</span> logger<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="日志组件" tabindex="-1"><a class="header-anchor" href="#日志组件"><span>日志组件</span></a></h2><p>方便采集日志,未来可以对一些严重的日志进行采集,分析bug出现情况</p><h4 id="接口" tabindex="-1"><a class="header-anchor" href="#接口"><span>接口</span></a></h4><div class="language-typescript line-numbers-mode" data-highlighter="prismjs" data-ext="ts"><pre><code><span class="line"><span class="token keyword">export</span> <span class="token keyword">interface</span> <span class="token class-name">Logger</span> <span class="token punctuation">{</span></span>
<span class="line">    <span class="token function">Debug</span><span class="token punctuation">(</span><span class="token operator">...</span>args<span class="token operator">:</span> <span class="token builtin">any</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token operator">:</span> Logger<span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line">    <span class="token function">Info</span><span class="token punctuation">(</span><span class="token operator">...</span>args<span class="token operator">:</span> <span class="token builtin">any</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token operator">:</span> Logger<span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line">    <span class="token function">Warn</span><span class="token punctuation">(</span><span class="token operator">...</span>args<span class="token operator">:</span> <span class="token builtin">any</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token operator">:</span> Logger<span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line">    <span class="token function">Error</span><span class="token punctuation">(</span><span class="token operator">...</span>args<span class="token operator">:</span> <span class="token builtin">any</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token operator">:</span> Logger<span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line">    <span class="token function">Fatal</span><span class="token punctuation">(</span><span class="token operator">...</span>args<span class="token operator">:</span> <span class="token builtin">any</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token operator">:</span> Logger<span class="token punctuation">;</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="实现" tabindex="-1"><a class="header-anchor" href="#实现"><span>实现</span></a></h4><p>ConsoleLog console处打印日志内容</p><p>PageLog 会在窗口显示日志内容,并且根据等级不同会进行消息通知</p><h4 id="使用" tabindex="-1"><a class="header-anchor" href="#使用"><span>使用</span></a></h4><div class="language-typescript line-numbers-mode" data-highlighter="prismjs" data-ext="ts"><pre><code><span class="line">Application<span class="token punctuation">.</span>App<span class="token punctuation">.</span>log<span class="token punctuation">.</span><span class="token function">Error</span><span class="token punctuation">(</span><span class="token string">&quot;获取题目发生了一个错误&quot;</span><span class="token punctuation">,</span> e<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><h2 id="配置组件" tabindex="-1"><a class="header-anchor" href="#配置组件"><span>配置组件</span></a></h2><p>应用配置,可以根据配置调整运行状态,也可作为一个存储组件使用,不过请勿存储较长内容</p><p>Config为配置基础接口,主要存储和监听配置kv</p><p>ConfigItems具体配置项</p><h4 id="接口-1" tabindex="-1"><a class="header-anchor" href="#接口-1"><span>接口</span></a></h4><div class="language-typescript line-numbers-mode" data-highlighter="prismjs" data-ext="ts"><pre><code><span class="line"><span class="token keyword">export</span> <span class="token keyword">interface</span> <span class="token class-name">Config</span> <span class="token punctuation">{</span></span>
<span class="line">    <span class="token function">GetConfig</span><span class="token punctuation">(</span>key<span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">,</span> defaultVal<span class="token operator">?</span><span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">)</span><span class="token operator">:</span> <span class="token builtin">string</span></span>
<span class="line"></span>
<span class="line">    <span class="token function">SetConfig</span><span class="token punctuation">(</span>key<span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">,</span> val<span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">)</span><span class="token operator">:</span> <span class="token builtin">Promise</span><span class="token operator">&lt;</span><span class="token builtin">any</span><span class="token operator">&gt;</span></span>
<span class="line"></span>
<span class="line">    <span class="token function">ConfigList</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">:</span> <span class="token builtin">any</span></span>
<span class="line"></span>
<span class="line">    <span class="token function">Watch</span><span class="token punctuation">(</span>key<span class="token operator">:</span> <span class="token builtin">Array</span><span class="token operator">&lt;</span><span class="token builtin">string</span><span class="token operator">&gt;</span> <span class="token operator">|</span> <span class="token builtin">string</span><span class="token punctuation">,</span> callback<span class="token operator">:</span> ConfigWatchCallback<span class="token punctuation">)</span><span class="token operator">:</span> <span class="token keyword">void</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span>
<span class="line"><span class="token keyword">export</span> <span class="token keyword">interface</span> <span class="token class-name">ConfigItems</span> <span class="token keyword">extends</span> <span class="token class-name">Config</span> <span class="token punctuation">{</span></span>
<span class="line">    <span class="token function">SetNamespace</span><span class="token punctuation">(</span>namespace<span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">)</span><span class="token operator">:</span> <span class="token keyword">void</span></span>
<span class="line"></span>
<span class="line">    <span class="token function">SetNamespaceConfig</span><span class="token punctuation">(</span>namespace<span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">,</span> key<span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">,</span> val<span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">)</span><span class="token operator">:</span> <span class="token builtin">Promise</span><span class="token operator">&lt;</span><span class="token builtin">any</span><span class="token operator">&gt;</span></span>
<span class="line"></span>
<span class="line">    <span class="token function">GetNamespaceConfig</span><span class="token punctuation">(</span>namespace<span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">,</span> key<span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">,</span> defaultVal<span class="token operator">?</span><span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">)</span><span class="token operator">:</span> <span class="token builtin">string</span></span>
<span class="line"></span>
<span class="line">    vtoken<span class="token operator">:</span> <span class="token builtin">string</span></span>
<span class="line">    rand_answer<span class="token operator">:</span> <span class="token builtin">boolean</span></span>
<span class="line">    auto<span class="token operator">:</span> <span class="token builtin">boolean</span></span>
<span class="line">    video_mute<span class="token operator">:</span> <span class="token builtin">boolean</span></span>
<span class="line">    answer_ignore<span class="token operator">:</span> <span class="token builtin">boolean</span></span>
<span class="line">    video_cdn<span class="token operator">:</span> <span class="token builtin">string</span></span>
<span class="line">    video_multiple<span class="token operator">:</span> <span class="token builtin">number</span></span>
<span class="line">    interval<span class="token operator">:</span> <span class="token builtin">number</span></span>
<span class="line">    topic_interval<span class="token operator">:</span> <span class="token builtin">number</span></span>
<span class="line">    super_mode<span class="token operator">:</span> <span class="token builtin">boolean</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="实现-1" tabindex="-1"><a class="header-anchor" href="#实现-1"><span>实现</span></a></h4><p>ChromeConfigItems 具体配置项类,需要注入具体Config实例实现存储功能</p><p>backendConfig 在扩展的后端环境使用</p><p>frontendGetConfig 在扩展的前端环境使用</p><h4 id="使用-1" tabindex="-1"><a class="header-anchor" href="#使用-1"><span>使用</span></a></h4><div class="language-typescript line-numbers-mode" data-highlighter="prismjs" data-ext="ts"><pre><code><span class="line"><span class="token keyword">new</span> <span class="token class-name">ChromeConfigItems</span><span class="token punctuation">(</span><span class="token function">NewFrontendGetConfig</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span></span>
<span class="line"><span class="token comment">// 对于配置类的可以直接定义新的配置项</span></span>
<span class="line">Application<span class="token punctuation">.</span>App<span class="token punctuation">.</span>config<span class="token punctuation">.</span>auto</span>
<span class="line">Application<span class="token punctuation">.</span>App<span class="token punctuation">.</span>config<span class="token punctuation">.</span>auto<span class="token operator">=</span><span class="token boolean">false</span></span>
<span class="line"><span class="token comment">// 更偏向于储存的可以直接使用自定义key,不过请注意,不要存储过长的内容</span></span>
<span class="line">Application<span class="token punctuation">.</span>App<span class="token punctuation">.</span>config<span class="token punctuation">.</span><span class="token function">GetConfig</span><span class="token punctuation">(</span><span class="token string">&quot;notify_tools_x&quot;</span><span class="token punctuation">)</span></span>
<span class="line">Application<span class="token punctuation">.</span>App<span class="token punctuation">.</span>config<span class="token punctuation">.</span><span class="token function">SetConfig</span><span class="token punctuation">(</span><span class="token string">&quot;notify_tools_x&quot;</span><span class="token punctuation">,</span> <span class="token keyword">this</span><span class="token punctuation">.</span>div<span class="token punctuation">.</span>style<span class="token punctuation">.</span>left<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="增减配置" tabindex="-1"><a class="header-anchor" href="#增减配置"><span>增减配置</span></a></h4><p>增减配置需要修改<code>SystemConfig:config</code>,<code>config.ts:ConfigItems</code>中的内容,会自动修改配置面板内容</p><p>如果发布油猴版本,请在对应的油猴版本中添加相应的配置</p><h2 id="事件组件" tabindex="-1"><a class="header-anchor" href="#事件组件"><span>事件组件</span></a></h2><p>有些事件调用的可以使用此接口,已有一个默认实现</p><h4 id="接口-2" tabindex="-1"><a class="header-anchor" href="#接口-2"><span>接口</span></a></h4><div class="language-typescript line-numbers-mode" data-highlighter="prismjs" data-ext="ts"><pre><code><span class="line"><span class="token keyword">export</span> <span class="token keyword">interface</span> <span class="token class-name">IEventListener<span class="token operator">&lt;</span><span class="token constant">T</span><span class="token operator">&gt;</span></span> <span class="token punctuation">{</span></span>
<span class="line">    <span class="token comment">// 添加事件监听</span></span>
<span class="line">    <span class="token function">addEventListener</span><span class="token punctuation">(</span>event<span class="token operator">:</span> <span class="token constant">T</span><span class="token punctuation">,</span> callback<span class="token operator">:</span> <span class="token builtin">Function</span><span class="token punctuation">)</span><span class="token operator">:</span> <span class="token keyword">void</span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line">    <span class="token comment">// 添加事件监听,但是只会调用一次</span></span>
<span class="line">    <span class="token function">addEventListenerOnce</span><span class="token punctuation">(</span>event<span class="token operator">:</span> <span class="token constant">T</span><span class="token punctuation">,</span> callback<span class="token operator">:</span> <span class="token builtin">Function</span><span class="token punctuation">)</span><span class="token operator">:</span> <span class="token keyword">void</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="实现-2" tabindex="-1"><a class="header-anchor" href="#实现-2"><span>实现</span></a></h4><div class="language-typescript line-numbers-mode" data-highlighter="prismjs" data-ext="ts"><pre><code><span class="line"><span class="token keyword">export</span> <span class="token keyword">class</span> <span class="token class-name">EventListener<span class="token operator">&lt;</span><span class="token constant">T</span><span class="token operator">&gt;</span></span> <span class="token keyword">implements</span> <span class="token class-name">IEventListener<span class="token operator">&lt;</span><span class="token constant">T</span><span class="token operator">&gt;</span></span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div>`,33)]))}const i=s(t,[["render",o]]),r=JSON.parse('{"path":"/Develop/Component.html","title":"系统组件","lang":"zh-CN","frontmatter":{"title":"系统组件"},"git":{"updatedTime":1604807562000,"contributors":[{"name":"CodFrm","username":"CodFrm","email":"code.farmer@qq.com","commits":4,"url":"https://github.com/CodFrm"}],"changelog":[{"hash":"20dd445eaa6e0fd64f56e992817027dee978b0d6","time":1604807562000,"email":"love@xloli.top","author":"CodFrm","message":"优化源码,添加注释"},{"hash":"eba9cea1835babc896811f041c14e10d4f0e0011","time":1604805002000,"email":"love@xloli.top","author":"CodFrm","message":"优化config规则&#x26;修复token的bug"},{"hash":"1de3c98825266de63a837a863d14a007e548e9d1","time":1604216602000,"email":"love@xloli.top","author":"CodFrm","message":"修改文档"},{"hash":"46842cb7c2601054ca5527e89dbe62622dd6de12","time":1603806167000,"email":"code.farmer@qq.com","author":"CodFrm","message":"开发文档"}]},"filePathRelative":"Develop/Component.md"}');export{i as comp,r as data};
