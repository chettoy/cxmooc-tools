import{_ as n,p as s,q as a,a1 as t}from"./framework-efe98465.js";const p={},e=t(`<blockquote><p>为了方便开发,提供了很多内置组件来进行调用,每一个组件都提供了接口可以定制化</p><p>存放文件夹为<code>internal/utils</code></p></blockquote><p>在应用启动(mooc.ts)周期注入组件实例</p><div class="language-typescript line-numbers-mode" data-ext="ts"><pre class="language-typescript"><code><span class="token keyword">let</span> component <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Map<span class="token operator">&lt;</span><span class="token builtin">string</span><span class="token punctuation">,</span> <span class="token builtin">any</span><span class="token operator">&gt;</span></span><span class="token punctuation">(</span><span class="token punctuation">)</span>
    <span class="token punctuation">.</span><span class="token function">set</span><span class="token punctuation">(</span><span class="token string">&quot;config&quot;</span><span class="token punctuation">,</span> <span class="token keyword">new</span> <span class="token class-name">ChromeConfigItems</span><span class="token punctuation">(</span><span class="token function">NewFrontendGetConfig</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
    <span class="token punctuation">.</span><span class="token function">set</span><span class="token punctuation">(</span><span class="token string">&quot;logger&quot;</span><span class="token punctuation">,</span> logger<span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="日志组件" tabindex="-1"><a class="header-anchor" href="#日志组件" aria-hidden="true">#</a> 日志组件</h2><p>方便采集日志,未来可以对一些严重的日志进行采集,分析bug出现情况</p><h4 id="接口" tabindex="-1"><a class="header-anchor" href="#接口" aria-hidden="true">#</a> 接口</h4><div class="language-typescript line-numbers-mode" data-ext="ts"><pre class="language-typescript"><code><span class="token keyword">export</span> <span class="token keyword">interface</span> <span class="token class-name">Logger</span> <span class="token punctuation">{</span>
    <span class="token function">Debug</span><span class="token punctuation">(</span><span class="token operator">...</span>args<span class="token operator">:</span> <span class="token builtin">any</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token operator">:</span> Logger<span class="token punctuation">;</span>

    <span class="token function">Info</span><span class="token punctuation">(</span><span class="token operator">...</span>args<span class="token operator">:</span> <span class="token builtin">any</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token operator">:</span> Logger<span class="token punctuation">;</span>

    <span class="token function">Warn</span><span class="token punctuation">(</span><span class="token operator">...</span>args<span class="token operator">:</span> <span class="token builtin">any</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token operator">:</span> Logger<span class="token punctuation">;</span>

    <span class="token function">Error</span><span class="token punctuation">(</span><span class="token operator">...</span>args<span class="token operator">:</span> <span class="token builtin">any</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token operator">:</span> Logger<span class="token punctuation">;</span>

    <span class="token function">Fatal</span><span class="token punctuation">(</span><span class="token operator">...</span>args<span class="token operator">:</span> <span class="token builtin">any</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token operator">:</span> Logger<span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="实现" tabindex="-1"><a class="header-anchor" href="#实现" aria-hidden="true">#</a> 实现</h4><p>ConsoleLog console处打印日志内容</p><p>PageLog 会在窗口显示日志内容,并且根据等级不同会进行消息通知</p><h4 id="使用" tabindex="-1"><a class="header-anchor" href="#使用" aria-hidden="true">#</a> 使用</h4><div class="language-typescript line-numbers-mode" data-ext="ts"><pre class="language-typescript"><code>Application<span class="token punctuation">.</span>App<span class="token punctuation">.</span>log<span class="token punctuation">.</span><span class="token function">Error</span><span class="token punctuation">(</span><span class="token string">&quot;获取题目发生了一个错误&quot;</span><span class="token punctuation">,</span> e<span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h2 id="配置组件" tabindex="-1"><a class="header-anchor" href="#配置组件" aria-hidden="true">#</a> 配置组件</h2><p>应用配置,可以根据配置调整运行状态,也可作为一个存储组件使用,不过请勿存储较长内容</p><p>Config为配置基础接口,主要存储和监听配置kv</p><p>ConfigItems具体配置项</p><h4 id="接口-1" tabindex="-1"><a class="header-anchor" href="#接口-1" aria-hidden="true">#</a> 接口</h4><div class="language-typescript line-numbers-mode" data-ext="ts"><pre class="language-typescript"><code><span class="token keyword">export</span> <span class="token keyword">interface</span> <span class="token class-name">Config</span> <span class="token punctuation">{</span>
    <span class="token function">GetConfig</span><span class="token punctuation">(</span>key<span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">,</span> defaultVal<span class="token operator">?</span><span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">)</span><span class="token operator">:</span> <span class="token builtin">string</span>

    <span class="token function">SetConfig</span><span class="token punctuation">(</span>key<span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">,</span> val<span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">)</span><span class="token operator">:</span> <span class="token builtin">Promise</span><span class="token operator">&lt;</span><span class="token builtin">any</span><span class="token operator">&gt;</span>

    <span class="token function">ConfigList</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">:</span> <span class="token builtin">any</span>

    <span class="token function">Watch</span><span class="token punctuation">(</span>key<span class="token operator">:</span> <span class="token builtin">Array</span><span class="token operator">&lt;</span><span class="token builtin">string</span><span class="token operator">&gt;</span> <span class="token operator">|</span> <span class="token builtin">string</span><span class="token punctuation">,</span> callback<span class="token operator">:</span> ConfigWatchCallback<span class="token punctuation">)</span><span class="token operator">:</span> <span class="token keyword">void</span>
<span class="token punctuation">}</span>

<span class="token keyword">export</span> <span class="token keyword">interface</span> <span class="token class-name">ConfigItems</span> <span class="token keyword">extends</span> <span class="token class-name">Config</span> <span class="token punctuation">{</span>
    <span class="token function">SetNamespace</span><span class="token punctuation">(</span>namespace<span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">)</span><span class="token operator">:</span> <span class="token keyword">void</span>

    <span class="token function">SetNamespaceConfig</span><span class="token punctuation">(</span>namespace<span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">,</span> key<span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">,</span> val<span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">)</span><span class="token operator">:</span> <span class="token builtin">Promise</span><span class="token operator">&lt;</span><span class="token builtin">any</span><span class="token operator">&gt;</span>

    <span class="token function">GetNamespaceConfig</span><span class="token punctuation">(</span>namespace<span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">,</span> key<span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">,</span> defaultVal<span class="token operator">?</span><span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">)</span><span class="token operator">:</span> <span class="token builtin">string</span>

    vtoken<span class="token operator">:</span> <span class="token builtin">string</span>
    rand_answer<span class="token operator">:</span> <span class="token builtin">boolean</span>
    auto<span class="token operator">:</span> <span class="token builtin">boolean</span>
    video_mute<span class="token operator">:</span> <span class="token builtin">boolean</span>
    answer_ignore<span class="token operator">:</span> <span class="token builtin">boolean</span>
    video_cdn<span class="token operator">:</span> <span class="token builtin">string</span>
    video_multiple<span class="token operator">:</span> <span class="token builtin">number</span>
    interval<span class="token operator">:</span> <span class="token builtin">number</span>
    topic_interval<span class="token operator">:</span> <span class="token builtin">number</span>
    super_mode<span class="token operator">:</span> <span class="token builtin">boolean</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="实现-1" tabindex="-1"><a class="header-anchor" href="#实现-1" aria-hidden="true">#</a> 实现</h4><p>ChromeConfigItems 具体配置项类,需要注入具体Config实例实现存储功能</p><p>backendConfig 在扩展的后端环境使用</p><p>frontendGetConfig 在扩展的前端环境使用</p><h4 id="使用-1" tabindex="-1"><a class="header-anchor" href="#使用-1" aria-hidden="true">#</a> 使用</h4><div class="language-typescript line-numbers-mode" data-ext="ts"><pre class="language-typescript"><code><span class="token keyword">new</span> <span class="token class-name">ChromeConfigItems</span><span class="token punctuation">(</span><span class="token function">NewFrontendGetConfig</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
<span class="token comment">// 对于配置类的可以直接定义新的配置项</span>
Application<span class="token punctuation">.</span>App<span class="token punctuation">.</span>config<span class="token punctuation">.</span>auto
Application<span class="token punctuation">.</span>App<span class="token punctuation">.</span>config<span class="token punctuation">.</span>auto<span class="token operator">=</span><span class="token boolean">false</span>
<span class="token comment">// 更偏向于储存的可以直接使用自定义key,不过请注意,不要存储过长的内容</span>
Application<span class="token punctuation">.</span>App<span class="token punctuation">.</span>config<span class="token punctuation">.</span><span class="token function">GetConfig</span><span class="token punctuation">(</span><span class="token string">&quot;notify_tools_x&quot;</span><span class="token punctuation">)</span>
Application<span class="token punctuation">.</span>App<span class="token punctuation">.</span>config<span class="token punctuation">.</span><span class="token function">SetConfig</span><span class="token punctuation">(</span><span class="token string">&quot;notify_tools_x&quot;</span><span class="token punctuation">,</span> <span class="token keyword">this</span><span class="token punctuation">.</span>div<span class="token punctuation">.</span>style<span class="token punctuation">.</span>left<span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="增减配置" tabindex="-1"><a class="header-anchor" href="#增减配置" aria-hidden="true">#</a> 增减配置</h4><p>增减配置需要修改<code>SystemConfig:config</code>,<code>config.ts:ConfigItems</code>中的内容,会自动修改配置面板内容</p><p>如果发布油猴版本,请在对应的油猴版本中添加相应的配置</p><h2 id="事件组件" tabindex="-1"><a class="header-anchor" href="#事件组件" aria-hidden="true">#</a> 事件组件</h2><p>有些事件调用的可以使用此接口,已有一个默认实现</p><h4 id="接口-2" tabindex="-1"><a class="header-anchor" href="#接口-2" aria-hidden="true">#</a> 接口</h4><div class="language-typescript line-numbers-mode" data-ext="ts"><pre class="language-typescript"><code><span class="token keyword">export</span> <span class="token keyword">interface</span> <span class="token class-name">IEventListener<span class="token operator">&lt;</span><span class="token constant">T</span><span class="token operator">&gt;</span></span> <span class="token punctuation">{</span>
    <span class="token comment">// 添加事件监听</span>
    <span class="token function">addEventListener</span><span class="token punctuation">(</span>event<span class="token operator">:</span> <span class="token constant">T</span><span class="token punctuation">,</span> callback<span class="token operator">:</span> <span class="token builtin">Function</span><span class="token punctuation">)</span><span class="token operator">:</span> <span class="token keyword">void</span><span class="token punctuation">;</span>

    <span class="token comment">// 添加事件监听,但是只会调用一次</span>
    <span class="token function">addEventListenerOnce</span><span class="token punctuation">(</span>event<span class="token operator">:</span> <span class="token constant">T</span><span class="token punctuation">,</span> callback<span class="token operator">:</span> <span class="token builtin">Function</span><span class="token punctuation">)</span><span class="token operator">:</span> <span class="token keyword">void</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="实现-2" tabindex="-1"><a class="header-anchor" href="#实现-2" aria-hidden="true">#</a> 实现</h4><div class="language-typescript line-numbers-mode" data-ext="ts"><pre class="language-typescript"><code><span class="token keyword">export</span> <span class="token keyword">class</span> <span class="token class-name">EventListener<span class="token operator">&lt;</span><span class="token constant">T</span><span class="token operator">&gt;</span></span> <span class="token keyword">implements</span> <span class="token class-name">IEventListener<span class="token operator">&lt;</span><span class="token constant">T</span><span class="token operator">&gt;</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div>`,33),o=[e];function c(i,l){return s(),a("div",null,o)}const u=n(p,[["render",c],["__file","Component.html.vue"]]);export{u as default};
